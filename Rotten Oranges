import collections
class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        
        queue=[]
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j]==2:
                    queue.append((i,j,0))
        queue=collections.deque(queue)            
        direction=[(0,1),(0,-1),(1,0),(-1,0)]
        inBound = lambda  a,b: 0<=a<len(grid) and 0<=b<len(grid[0]) 
        time = 0
        while(queue):
            
            
            for d in direction:
                if inBound(queue[0][0]+d[0],queue[0][1]+d[1]) and grid[queue[0][0]+d[0]][queue[0][1]+d[1]]==1:
                    queue.append((queue[0][0]+d[0],queue[0][1]+d[1],queue[0][2]+1))
                    grid[queue[0][0]+d[0]][queue[0][1]+d[1]]=2
                    if queue[0][2]+1>=time:
                        time=queue[0][2]+1
            
            queue.popleft()
            
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j]==1:
                    return -1
        return time
        

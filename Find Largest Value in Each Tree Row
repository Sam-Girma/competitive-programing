# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def largestValues(self, root: Optional[TreeNode]) -> List[int]:
        if root==None:
            return []
        queue=deque([])
        maxreturn=[]
        maxreturn.append(root.val)
        queue.append(root)
        def comparator (ele):
            return ele.val
        while queue:
            for i in range(len(queue)):
                if queue[0].left!=None:
                    queue.append(queue[0].left)
                if queue[0].right!=None:
                    queue.append(queue[0].right)
                queue.popleft()
            if queue:
                maxreturn.append((max(queue, key=comparator)).val)
        return maxreturn
                
        

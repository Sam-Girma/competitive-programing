# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        lst=[]
        while(head!=None):
            lst.append(head)
            head=head.next
        lst.reverse()
        for i in range (len(lst)-1):
            lst[i].next=lst[i+1]
        if (len(lst)!=0):
            lst[-1].next=None
            head=lst[0]
            return head
        else:
            return None
            
        
